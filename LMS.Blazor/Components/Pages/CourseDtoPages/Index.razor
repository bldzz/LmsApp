@page "/coursedtos"
@using LMS.Shared.DTOs
@using LMS.Blazor.Client.Services
@inject IApiService ApiService
@inject NavigationManager NavigationManager

<PageTitle>Courses</PageTitle>

<h1>Courses</h1>

<p>
    <a class="btn btn-primary" href="/coursedtos/create">Create New Course</a>
</p>

@if (courses == null)
{
    <p><em>Loading...</em></p>
}
else if (!courses.Any())
{
    <p>No courses found.</p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Course Name</th>
                <th>Start Date</th>
                <th>Number of Modules</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var course in courses)
            {
                <tr>
                    <td>@course.CourseName</td>
                    <td>@course.StartDate.ToShortDateString()</td>
                    <td>@course.Modules.Count</td>
                    <td>
                        <a class="btn btn-sm btn-secondary" href="@($"coursedtos/edit?id={course.Id}")">Edit</a>
                        <a class="btn btn-sm btn-info" href="@($"coursedtos/details?id={course.Id}")">Details</a>
                        <a class="btn btn-sm btn-danger" href="@($"coursedtos/delete?id={course.Id}")">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<CourseDto>? courses;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            // Fetch courses using the ProxyController via ApiService
            courses = (await ApiService.CallApiAsync<List<CourseDto>>("api/courses")).ToList();
        }
        catch (Exception ex)
        {
            Console.Error.WriteLine($"Error loading courses: {ex.Message}");
        }
    }
}
